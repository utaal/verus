name: ci

on:
  push:
    branches:
      - 'actions-lambda-runner'

  workflow_dispatch:

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  fmt:
    runs-on: ephemeral-lambda
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: check cargo fmt
        working-directory: ./source
        run: |
          source "/root/.cargo/env"
          . ../tools/activate
          vargo fmt -- --check
      - name: check cargo fmt for vargo
        working-directory: ./tools/vargo
        run: |
          source "/root/.cargo/env"
          cargo fmt -- --check

  test:
    runs-on: ephemeral-lambda
    strategy:
      matrix:
        features: [''] # , 'singular']
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get z3
        working-directory: ./source
        run: |
          cp /opt/z3/z3-4.12.2 z3
          echo z3 version `./z3 --version`
      - name: cargo test
        working-directory: ./source
        run: |
          source "/root/.cargo/env"
          . ../tools/activate
          vargo clean
          if [ "${{ matrix.features }}" == "singular" ]; then
            vargo build --features singular
            VERUS_Z3_PATH="$(pwd)/z3" VERUS_SINGULAR_PATH="/usr/bin/Singular" vargo test -p air --features singular
            VERUS_Z3_PATH="$(pwd)/z3" VERUS_SINGULAR_PATH="/usr/bin/Singular" vargo test -p rust_verify_test --features singular
          else
            vargo build
            VERUS_Z3_PATH="$(pwd)/z3" vargo test -p air
            VERUS_Z3_PATH="$(pwd)/z3" vargo test -p rust_verify_test
            cd pervasive
            unset -f cargo
            cargo build
            cd ..
          fi
      - name: build docs
        if: matrix.features == ''
        working-directory: ./source
        run: |
          source "/root/.cargo/env"
          ./tools/docs.sh
      - name: upload artifact
        uses: actions/upload-artifact@v2
        if: matrix.features == ''
        with:
          name: verusdoc
          path: source/doc

