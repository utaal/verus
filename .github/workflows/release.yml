name: release

on:
  workflow_run:
    workflows: [ci]
    branches: [binary-releases]
    types: [completed]
  
  workflow_dispatch:
    
  pull_request:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: download all artifacts
        uses: actions/download-artifact@v4

      - name: create release tag
        shell: bash
        run: echo "TAG_NAME=$(date +v-%Y-%m-%d-%H%M)" >> $GITHUB_ENV

      - name: create nightly release
        id: create_release
        uses: viperproject/create-nightly-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Nightly Release ${{ env.TAG_NAME }}
          keep_num: 4
        
      - name: list artifacts
        run: ls -l

      # - name: Upload release asset for Ubuntu
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./prusti-release-ubuntu-20.04/release.zip
      #     asset_name: prusti-release-ubuntu.zip
      #     asset_content_type: application/zip

      # - name: Upload release asset for Windows
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./prusti-release-windows-latest/release.zip
      #     asset_name: prusti-release-windows.zip
      #     asset_content_type: application/zip

      # # This asset is only for backward compatibility with Prusti-Assistant. After updating
      # # Prusti-Assistant to use the new asset name, we can wait a while and then delete this.
      # - name: Upload release asset for macOS x86 using a backward-compatibile name
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./prusti-release-macos-13/release.zip
      #     asset_name: prusti-release-macos.zip
      #     asset_content_type: application/zip

      # - name: Upload release asset for macOS x86
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./prusti-release-macos-13/release.zip
      #     asset_name: prusti-release-macos-x86.zip
      #     asset_content_type: application/zip

      # - name: Upload release asset for macOS arm64
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./prusti-release-macos-14/release.zip
      #     asset_name: prusti-release-macos-arm64.zip
      #     asset_content_type: application/zip